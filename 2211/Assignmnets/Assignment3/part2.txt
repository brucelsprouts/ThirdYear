Files
1. Suppose the command ls were unavailable. What command could you use to view files in the current directory instead? Explain why the command works?
If the command ls were unavailable, a substitute command you could use to view files in the current directory could be (echo *). This works by expanding into all file names in the current directory.

2. What option do I need to supply to the rm command to ensure I am prompted before a file or directory is removed? What option do I need to supply to the rm command to ensure I am not prompted before a file or directory is removed? What happens if both options are used simultaneously - which one has precedence?
To be prompted before a file removal use (rm -i filename), and to ensure you are not prompted use (rm -f filename). If both options were used simultaneously, (-f) takes precedence and no prompt is shown.

3. What are some differences between the rename command and the mv command?
Some of the differences between the rename command and the mv command are that mv is able to rename one file or directory while also moving it, and rename is able to rename multiple files using some expression.

4. The file command, when run against an executable program shows ELF 64-bit LSB executable. What does ELF mean in this context?
In this context ELF means "Executable and Linkable Format", which is a standard binary format for executables, and shared libraries.

5. Consider the empty file test.txt. Why does ls -l test.txt say the filesize is 0 but du test.txt says the file size is 1?
Because (ls -l text.txt) displays the size of the data within the file, whereas (du test.txt) shows 1 typically because every file takes up at least 1 filesystem block.

Directories
Find a better way to do the following
mkdir grandparent
mkdir grandparent/parent
mkdir grandparent/parent/child
(mkdir -p grandparent/parent/child)

2. How do you create a directory with a spacex in it? How do you remove a directory with a space in it?
To create (mkdir "spa ce")
To remove (rmdir "spa ce")

3. How do I create a directory and set it's permissions to dr-x------ using only the mkdir command?
(mkdir -m 500 mydir)

4. Suppose I was working in /dir1/dir2/dir3 and I cd to /dir4/dir5/dir6. What is an easy way to get back to /dir1/dir2/dir3 without using the explicit command cd /dir1/dir2/dir3 (perhaps I forgot what the full path name was).
(cd -)

5. Suppose I used pushd to add 10 folders to my stack. How do I quickly determine which folder is the 6th folder in my stack and how do I quickly cd to it?
Firstly, view the stack by inputting (dirs -v), then jump to the 6th folder by inputting (pushd +5) to reach index 5 of the stack.

Permissions
What option(s) do I need to add to chmod to print out what modifications are being made?
(chmod -v 755 file)

2. What option(s) do I need to add to chown to get file2 ownership to simply match file1?
(chown --reference=file1 file2)

3. What option(s) do I need to add to the stat command to display file permission, user ownership, and group ownership only?
(stat -c "%A %U %G" file)

4. How do you grant a group permission to write data to a file, but prevent the users in that group from moving, removing, or renaming the file?
(chmod g+w file)	Remove write permission from the directory
(chmod g-w directory)	Allows group to write inside the file but prevent users in the group from moving, removing, or renaming the file.

5. When using chmod in symbolic mode, what happens if u/g/o/a are omitted. Eg. chmod +x <filename>
If u/g/o/a are omitted with the example (chmod +x <filename>) then it defaults to a, giving execute permissions to user, group and others